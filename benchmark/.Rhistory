plot.circular((kajuT2$net_angle_deg)*pi/180)
plot.circular((kajuA1$net_angle_deg)*pi/180)
plot.circular((kaju_data$net_angle_deg)*pi/180)
plot.circular((kajuT2$net_angle_deg)*pi/180)
plot.circular((kaju_data$net_angle_deg)*pi/180)
plot.circular((kaju_data$net_angle_deg)*pi/180))
plot.circular((kaju_data$net_angle_deg)*pi/180, stack = T)
plot.circular((kajuT2$net_angle_deg)*pi/180, stack = T)
plot.circular((kaju_data$net_angle_deg)*pi/180, rotation = pi)
plot.circular((kaju_data$net_angle_deg)*pi/180, rotation = "pi")
plot.circular((kaju_data$net_angle_deg)*pi/180, rotation = T)
plot.circular((kaju_data$net_angle_deg)*pi/180, rotation = 90)
plot.circular((kaju_data$net_angle_deg)*pi/180, zero = pi)
plot.circular((kaju_data$net_angle_deg)*pi/180, zero = pi/2)
plot.circular((kaju_data$net_angle_deg)*pi/180, zero = pi/2, col = "blue")
plot.circular((kaju_data$net_angle_deg)*pi/180, pch = 12, zero = pi/2, col = "blue")
plot.circular((kaju_data$net_angle_deg)*pi/180, pch = 1, zero = pi/2, col = "blue")
plot.circular((kaju_data$net_angle_deg)*pi/180, pch = 1, cex = 2, zero = pi/2, col = "blue")
plot.circular((kaju_data$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue")
plot.circular(c((kajuT2$net_angle_deg)*pi/180, (kajuT2$net_angle_deg)*pi/180), pch = 1, cex = 1.5, zero = pi/2, col = c("blue","red"))
plot.circular(r((kajuT2$net_angle_deg)*pi/180, (kajuT2$net_angle_deg)*pi/180), pch = 1, cex = 1.5, zero = pi/2, col = c("blue","red"))
plot.circular(c((kajuT2$net_angle_deg)*pi/180, (kajuA1$net_angle_deg)*pi/180), pch = 1, cex = 1.5, zero = pi/2, col = c("blue","red"))
plot.circular(c((kajuT2$net_angle_deg)*pi/180, (kajuA1$net_angle_deg)*pi/180), pch = 1, cex = 1.5, zero = pi/2, col = "blue","red")
plot.circular(c((kajuT2$net_angle_deg)*pi/180, (kajuA1$net_angle_deg)*pi/180), pch = 1, cex = 1.5, zero = pi/2, col = colorRampPalette(c("red","yellow"))
)
plot.circular((kaju_data$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue")
par(mfrow=c(1,1))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue")
plot.circular((kajuA1$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue")
T2plot <- plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue")
A1plot <- plot.circular((kajuA1$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "red")
plot(T2plot, A1plot)
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue")
points.circular((kajuA1$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "red")
points.circular((kajuA1$net_angle_deg)*pi/180, pch = 2, cex = 1.5, zero = pi/2, col = "red")
points.circular((kajuA1$net_angle_deg)*pi/180, pch = 12, cex = 1.5, zero = pi/2, col = "red")
points.circular((kajuA1$net_angle_deg)*pi/180, pch = 16, cex = 1.5, zero = pi/2, col = "red")
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue")
points.circular((kajuA1$net_angle_deg)*pi/180, pch = 16, cex = 1.5, zero = pi/2, col = "red")
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue")
points.circular((kajuA1$net_angle_deg)*pi/180, pch = 16, cex = 1, zero = pi/2, col = "red")
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue", tcl = 0.001)
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue")
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue", tol = 0.01)
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue", tol = 0.0001)
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue", units = deg)
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue", units = degrees)
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue", units = "degrees")
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue", units = "degrees", control.circle=circle.control(n=8))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue", units = "degrees", control.circle=circle.control(type = "o"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue", units = "degrees", control.circle=circle.control(type = "n"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue", units = "degrees", control.circle=circle.control(type = "b"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue", units = "degrees", control.circle=circle.control(type = "c"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue", units = "degrees", control.circle=circle.control(type = "h"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue", units = "degrees", control.circle=circle.control(type = "s"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue", units = "degrees", control.circle=circle.control(type = "p"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue", units = "degrees", control.circle=circle.control(type = "l"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue", units = "degrees", control.circle=circle.control(col = "grey"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue", units = "degrees", control.circle=circle.control(col = "grey", bg = "grey"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue", units = "degrees", control.circle=circle.control(col = "light grey"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue", units = "degrees", control.circle=circle.control(col = "grey"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue", units = "degrees", control.circle=circle.control(col = "grey", cex = 0.5))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue", units = "degrees", control.circle=circle.control(col = "grey"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue", units = "degrees", control.circle=circle.control(col = "dark grey"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue", units = "degrees", control.circle=circle.control(n =10000, col = "dark grey"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue", units = "degrees", control.circle=circle.control(col = "dark grey", lty = "dotted"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue", units = "degrees", control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2, pch = 1, cex = 1.5, zero = pi/2, col = "blue", units = "degrees", control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular(kajuT2, pch = 1, cex = 1.5, zero = pi/2, col = "blue", units = "degrees", control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue", units = "degrees", control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 2, zero = pi/2, col = "blue", units = "degrees", control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, zero = pi/2, col = "blue", units = "degrees", control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, start.sep = 2, zero = pi/2, col = "blue", units = "degrees", control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, start.sep = .2, zero = pi/2, col = "blue", units = "degrees", control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, start.sep = -0.2, zero = pi/2, col = "blue", units = "degrees", control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, start.sep = -0.1, zero = pi/2, col = "blue", units = "degrees", control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, start.sep = -0.1, shrink = 0.5, zero = pi/2, col = "blue", units = "degrees", control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, start.sep = -0.1, shrink = 0.8, zero = pi/2, col = "blue", units = "degrees", control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, start.sep = -0.1, shrink = 0.9, zero = pi/2, col = "blue", units = "degrees", control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, start.sep = -0.1, zero = pi/2, col = "blue", units = "degrees", control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, start.sep = -0.1, zero = pi/2, col = "blue", units = "degrees", tcl.text = 0.05, control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, start.sep = -0.1, zero = pi/2, col = "blue", units = "degrees", tcl.text = 1, control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, start.sep = -0.1, zero = pi/2, col = "blue", units = "degrees", tcl.text = 0.5, control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, start.sep = -0.1, zero = pi/2, col = "blue", units = "degrees", tcl.text = 0.5, axes = F, control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, start.sep = -0.1, zero = pi/2, col = "blue", units = "degrees", tcl.text = 0.5, control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, start.sep = -0.1, zero = pi/2, col = "blue", units = "degrees", tcl.text = 0.8, control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, start.sep = -0.1, zero = pi/2, col = "blue", units = "degrees", tcl.text = 0.1, control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, start.sep = -0.1, zero = pi/2, col = "blue", units = "degrees", tcl.text = 0.05, control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, start.sep = -0.1, zero = pi/2, col = "blue", units = "degrees", tcl.text = 0.01, control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, start.sep = -0.1, zero = pi/2, col = "blue", units = "degrees", tcl.text = 0, control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, start.sep = -0.1, zero = pi/2, col = "blue", units = "degrees", tcl.text = 0, control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 16, cex = 1.5, start.sep = -0.1, zero = pi/2, col = "blue", units = "degrees", tcl.text = 0.01, control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, start.sep = -0.1, zero = pi/2, col = "blue", units = "degrees", tcl.text = 0.01, control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, start.sep = -0.1, zero = pi/2, col=rgb(1,0,0,0.1), units = "degrees", tcl.text = 0.01, control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, start.sep = -0.1, zero = pi/2, col=rgb(1,0,0,1), units = "degrees", tcl.text = 0.01, control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, start.sep = -0.1, zero = pi/2, col=rgb(1,0,1,1), units = "degrees", tcl.text = 0.01, control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 16, cex = 1.5, start.sep = -0.1, zero = pi/2, col=rgb(1,0,1,1), units = "degrees", tcl.text = 0.01, control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, start.sep = -0.1, zero = pi/2, col=rgb(1,0,1,1), units = "degrees", tcl.text = 0.01, control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, start.sep = -0.1, zero = pi/2, col = "blue", units = "degrees", tcl.text = 0.01, control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, start.sep = -0.1, zero = pi/2, col = drv, units = "degrees", tcl.text = 0.01, control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, start.sep = -0.1, zero = pi/2, col = "blue", units = "degrees", tcl.text = 0.01, control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, start.sep = -0.1, zero = pi/2, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.5), units = "degrees", tcl.text = 0.01, control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 1, cex = 1.5, start.sep = -0.1, zero = pi/2, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.1), units = "degrees", tcl.text = 0.01, control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 16, cex = 1.5, start.sep = -0.1, zero = pi/2, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.1), units = "degrees", tcl.text = 0.01, control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 16, cex = 1.5, start.sep = -0.1, zero = pi/2, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.2), units = "degrees", tcl.text = 0.01, control.circle=circle.control(col = "dark grey", lty = "dashed"))
points.circular((kajuA1$net_angle_deg)*pi/180, pch = 16, cex = 1.5, start.sep = 0.1, zero = pi/2, col = rgb(red = 1, green = 0, blue = 0, alpha = 0.2))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 16, cex = 1.5, start.sep = 0.1, zero = pi/2, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.2), units = "degrees", tcl.text = 0.01, control.circle=circle.control(col = "dark grey", lty = "dashed"))
points.circular((kajuA1$net_angle_deg)*pi/180, pch = 16, cex = 1.5, start.sep = -0.1, zero = pi/2, col = rgb(red = 1, green = 0, blue = 0, alpha = 0.2))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 16, cex = 1.5, start.sep = 0.1, zero = pi/2, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.2), units = "degrees", tcl.text = 0.01, ylab = "T2", control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 16, cex = 1.5, start.sep = 0.1, zero = pi/2, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.2), units = "degrees", tcl.text = 0.01, control.circle=circle.control(col = "dark grey", lty = "dashed"))
points.circular((kajuA1$net_angle_deg)*pi/180, pch = 16, cex = 1.5, start.sep = -0.1, zero = pi/2, col = rgb(red = 1, green = 0, blue = 0, alpha = 0.2))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 16, cex = 1.5, start.sep = 0.1, zero = pi/2, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.2), units = "degrees", tcl.text = 0.01, control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 16, cex = 1.5, start.sep = 0.1, zero = pi/2, col = rgb(red = 0, green = 0, blue = 1, alpha = 0), units = "degrees", tcl.text = 0.01, control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 16, cex = 1.5, start.sep = 0.1, zero = pi/2, col = rgb(red = 0, green = 0, blue = 1, alpha = 1), units = "degrees", tcl.text = 0.01, control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 16, cex = 1.5, start.sep = 0.1, zero = pi/2, col = rgb(red = 0, green = 0, blue = 1, alpha = 100), units = "degrees", tcl.text = 0.01, control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 16, cex = 1.5, start.sep = 0.1, zero = pi/2, col = rgb(red = 0, green = 0, blue = 1, alpha = 10), units = "degrees", tcl.text = 0.01, control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 16, cex = 1.5, start.sep = 0.1, zero = pi/2, col = rgb(red = 0, green = 0, blue = 1, alpha = 1.1), units = "degrees", tcl.text = 0.01, control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 16, cex = 1.5, start.sep = 0.1, zero = pi/2, col = rgb(red = 0, green = 0, blue = 1, alpha = 1), units = "degrees", tcl.text = 0.01, control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 16, cex = 1.5, start.sep = 0.1, zero = pi/2, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.5), units = "degrees", tcl.text = 0.01, control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 16, cex = 1.5, start.sep = 0.1, zero = pi/2, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.3), units = "degrees", tcl.text = 0.01, control.circle=circle.control(col = "dark grey", lty = "dashed"))
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 16, cex = 1.5, start.sep = 0.1, zero = pi/2, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.4), units = "degrees", tcl.text = 0.01, control.circle=circle.control(col = "dark grey", lty = "dashed"))
points.circular((kajuA1$net_angle_deg)*pi/180, pch = 16, cex = 1.5, start.sep = -0.1, zero = pi/2, col = rgb(red = 1, green = 0, blue = 0, alpha = 0.4))
rose.diag(((kajuT2$net_angle_deg)*pi/180)
)
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 16, cex = 1.5, start.sep = 0.1, zero = pi/2, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.4), units = "degrees", tcl.text = 0.01, control.circle=circle.control(col = "dark grey", lty = "dashed"))
points.circular((kajuA1$net_angle_deg)*pi/180, pch = 16, cex = 1.5, start.sep = -0.1, zero = pi/2, col = rgb(red = 1, green = 0, blue = 0, alpha = 0.4))
rose.diag(((kajuT2$net_angle_deg)*pi/180), add = T)
plot.circular((kajuT2$net_angle_deg)*pi/180, pch = 16, cex = 1.5, start.sep = 0.1, zero = pi/2, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.4), units = "degrees", tcl.text = 0.01, control.circle=circle.control(col = "dark grey", lty = "dashed"))
rose.diag(((kajuT2$net_angle_deg)*pi/180))
rose.diag(((kajuT2$net_angle_deg)*pi/180), pch = 1)
rose.diag(((kajuT2$net_angle_deg)*pi/180), pch = 16)
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex=1)
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex=2)
rose.diag(((kajuT2$net_angle_deg)*pi/180), axes = F)
rose.diag(((kajuT2$net_angle_deg)*pi/180), axes = F, upper = F)
rose.diag(((kajuT2$net_angle_deg)*pi/180), axes = F, ticks = F)
rose.diag(((kajuT2$net_angle_deg)*pi/180), axes = F, tcl = 0.02)
rose.diag(((kajuT2$net_angle_deg)*pi/180), axes = F, tcl = 0.05)
rose.diag(((kajuT2$net_angle_deg)*pi/180), axes = F)
rose.diag(((kajuT2$net_angle_deg)*pi/180), axes = T)
rose.diag(((kajuT2$net_angle_deg)*pi/180), axes = T, tcl.text = 0)
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 2, axes = T, tcl.text = 0)
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 0.5, axes = T, tcl.text = 0)
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 0.5, axes = T, tcl.text = 0, units = "deg")
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 0.5, axes = T, tcl.text = 0, units = "degrees")
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 0.8, axes = T, tcl.text = 0, units = "degrees")
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, axes = T, tcl.text = 0, units = "degrees")
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, axes = T, tcl.text = 0, units = "degrees", border = NA)
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.4))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.5))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.4))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.4), rotation = pi/2)
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.4), zero = pi/2)
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.4), zero = pi/2, rotation = 0,1)
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.4), zero = pi/2, rotation = 0.1)
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.4), zero = pi/2, rotation = "c")
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.4), zero = pi/2, rotation = c("c","d")
)
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.4), zero = pi/2)
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, axes = T, ticks = F, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.4), zero = pi/2)
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.4), zero = pi/2)
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 16, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.4), zero = pi/2)
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 64, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.4), zero = pi/2)
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 32, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.4), zero = pi/2)
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 32, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.4), prop = 0.5, zero = pi/2)
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 32, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.4), prop = 1.5, zero = pi/2)
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 32, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.4), prop = 1, zero = pi/2)
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 32, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.4), prop = 1, zero = pi/2)
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 32, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.4), prop = 1, zero = pi/2, control.circle=circle.control(col = "dark grey", lty = "dashed"))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 32, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.2), prop = 1, zero = pi/2, control.circle=circle.control(col = "dark grey", lty = "dashed"))
rose.diag(((kajuA1$net_angle_deg)*pi/180), bins = 32, axes = F, border = NA, col = rgb(red = 1, green = 0, blue = 0, alpha = 0.2), prop = 1, zero = pi/2, add = T)
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 64, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.2), prop = 1, zero = pi/2, control.circle=circle.control(col = "dark grey", lty = "dashed"))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 128, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.2), prop = 1, zero = pi/2, control.circle=circle.control(col = "dark grey", lty = "dashed"))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 1024, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.2), prop = 1, zero = pi/2, control.circle=circle.control(col = "dark grey", lty = "dashed"))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 512, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.2), prop = 1, zero = pi/2, control.circle=circle.control(col = "dark grey", lty = "dashed"))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 256, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.2), prop = 1, zero = pi/2, control.circle=circle.control(col = "dark grey", lty = "dashed"))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 256, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.2), prop = 2, zero = pi/2, control.circle=circle.control(col = "dark grey", lty = "dashed"))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 128, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.2), prop = 2, zero = pi/2, control.circle=circle.control(col = "dark grey", lty = "dashed"))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 128, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.2), prop = 1.5, zero = pi/2, control.circle=circle.control(col = "dark grey", lty = "dashed"))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 128, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.2), prop = 2, zero = pi/2, control.circle=circle.control(col = "dark grey", lty = "dashed"))
rose.diag(((kajuA1$net_angle_deg)*pi/180), cex = 1, bins = 128, border = NA, col = rgb(red = 1, green = 0, blue = 0, alpha = 0.2), prop = 1.5, zero = pi/2, add = T)
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 128, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.2), prop = 2, zero = pi/2, control.circle=circle.control(col = "dark grey", lty = "dashed"))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 64, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.2), prop = 2, zero = pi/2, control.circle=circle.control(col = "dark grey", lty = "dashed"))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 64, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.2), prop = 1.5, zero = pi/2, control.circle=circle.control(col = "dark grey", lty = "dashed"))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 64, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.2), prop = 1.75, zero = pi/2, control.circle=circle.control(col = "dark grey", lty = "dashed"))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 64, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.2), prop = 2, zero = pi/2, control.circle=circle.control(col = "dark grey", lty = "dashed"))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 64, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.2), prop = 1.75, zero = pi/2, control.circle=circle.control(col = "dark grey", lty = "dashed"))
rose.diag(((kajuA1$net_angle_deg)*pi/180), bins = 64, axes = F, border = NA, col = rgb(red = 1, green = 0, blue = 0, alpha = 0.2), prop = 1, zero = pi/2, add = T)
rose.diag(((kajuA1$net_angle_deg)*pi/180), bins = 64, axes = F, border = NA, col = rgb(red = 1, green = 0, blue = 0, alpha = 0.2), prop = 1.75, zero = pi/2, add = T)
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 64, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.2), prop = 1.75, zero = pi/2, control.circle=circle.control(col = "dark grey", lty = "dashed"))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 64, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.2), prop = 1.75, zero = pi/2, control.circle=circle.control(col = "dark grey", lty = "dashed"))
rose.diag(((kajuA1$net_angle_deg)*pi/180), bins = 64, axes = F, border = NA, col = rgb(red = 1, green = 0, blue = 0, alpha = 0.2), prop = 1.75, zero = pi/2, add = T)
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 32, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.2), prop = 1.75, zero = pi/2, control.circle=circle.control(col = "dark grey", lty = "dashed"))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 32, axes = T, tcl.text = 0, units = "degrees", border = NA, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.2), prop = 1.5, zero = pi/2, control.circle=circle.control(col = "dark grey", lty = "dashed"))
rose.diag(((kajuA1$net_angle_deg)*pi/180), bins = 32, axes = F, border = NA, col = rgb(red = 1, green = 0, blue = 0, alpha = 0.2), prop = 1.5, zero = pi/2, add = T)
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 16, axes = T, tcl.text = 0, units = "degrees", border = NA, zero = pi/2, control.circle=circle.control(col = "dark grey", lty = "dashed"))
rose.diag((0, cex = 1, bins = 16, axes = T, tcl.text = 0, units = "degrees", border = NA, zero = pi/2, control.circle=circle.control(col = "dark grey", lty = "dashed"))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 16, axes = T, tcl.text = 0, units = "degrees", border = NA, zero = pi/2, control.circle=circle.control(col = "dark grey", lty = "dashed"))
points.circular((kajuA1$net_angle_deg)*pi/180, pch = 16, cex = 1.5, start.sep = -0.1, zero = pi/2, col = rgb(red = 1, green = 0, blue = 0, alpha = 0.4))
points.circular((kajuA1$net_angle_deg)*pi/180, pch = 16, cex = 2.5, start.sep = -0.1, zero = pi/2, col = rgb(red = 1, green = 0, blue = 0, alpha = 0.4))
points.circular((kajuA1$net_angle_deg)*pi/180, pch = 16, cex = 2.5, start.sep = -0.2, zero = pi/2, col = rgb(red = 1, green = 0, blue = 0, alpha = 0.4))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 16, axes = T, tcl.text = 0, units = "degrees", border = NA, zero = pi/2, control.circle=circle.control(col = "dark grey", lty = "dashed"))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 16, axes = T, tcl.text = 0, units = "degrees", border = NA, zero = pi/2, control.circle=circle.control(col = "dark grey", lty = "dashed"))
points.circular((kajuA1$net_angle_deg)*pi/180, pch = 16, cex = 2.5, start.sep = -0.25, zero = pi/2, col = rgb(red = 1, green = 0, blue = 0, alpha = 0.4))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 16, axes = T, tcl.text = 0, units = "degrees", border = NA, zero = pi/2, control.circle=circle.control(col = "dark grey", lty = "dashed"))
points.circular((kajuA1$net_angle_deg)*pi/180, pch = 16, cex = 2.5, start.sep = -0.2, zero = pi/2, col = rgb(red = 1, green = 0, blue = 0, alpha = 0.4))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 16, axes = T, tcl.text = 0, units = "degrees", border = NA, zero = pi/2, control.circle=circle.control(col = "dark grey", lty = "dashed"))
points.circular((kajuA1$net_angle_deg)*pi/180, pch = 16, cex = 2, start.sep = -0.2, zero = pi/2, col = rgb(red = 1, green = 0, blue = 0, alpha = 0.4))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 16, axes = T, tcl.text = 0, units = "degrees", border = NA, zero = pi/2, control.circle=circle.control(col = "dark grey", lty = "dashed"))
points.circular((kajuA1$net_angle_deg)*pi/180, pch = 16, cex = 2, start.sep = -0.15, zero = pi/2, col = rgb(red = 1, green = 0, blue = 0, alpha = 0.4))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 16, axes = T, tcl.text = 0, units = "degrees", border = NA, zero = pi/2, control.circle=circle.control(col = "dark grey", lty = "dashed"))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 16, axes = T, shrink = 0.8, tcl.text = 0, units = "degrees", border = NA, zero = pi/2, control.circle=circle.control(col = "dark grey", lty = "dashed"))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 16, axes = T, shrink = 1.5, tcl.text = 0, units = "degrees", border = NA, zero = pi/2, control.circle=circle.control(col = "dark grey", lty = "dashed"))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 16, axes = T, tcl.text = 0, units = "degrees", border = NA, zero = pi/2, control.circle=circle.control(col = "dark grey", lty = "dashed"))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 16, axes = T, tcl.text = 0, units = "degrees", border = NA, zero = pi/2, control.circle=circle.control(col = "dark grey", lty = "dashed"))
points.circular((kajuA1$net_angle_deg)*pi/180, pch = 16, cex = 2, start.sep = -0.15, zero = pi/2, col = rgb(red = 1, green = 0, blue = 0, alpha = 0.4))
points.circular((kajuT2$net_angle_deg)*pi/180, pch = 16, cex = 2, start.sep = -0.15, zero = pi/2, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.4))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 16, axes = T, tcl.text = 0, units = "degrees", border = NA, zero = pi/2, control.circle=circle.control(col = "dark grey", lty = "dashed"))
points.circular((kajuA1$net_angle_deg)*pi/180, pch = 16, cex = 2, start.sep = -0.15, zero = pi/2, col = rgb(red = 1, green = 0, blue = 0, alpha = 0.4))
points.circular((kajuT2$net_angle_deg)*pi/180, pch = 16, cex = 2, start.sep = 0.15, zero = pi/2, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.4))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 16, axes = T, tcl.text = 0, units = "degrees", border = NA, zero = pi/2, tol = 0.06 control.circle=circle.control(col = "dark grey", lty = "dashed"))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 16, axes = T, tcl.text = 0, units = "degrees", border = NA, zero = pi/2, tol = 0.06, control.circle=circle.control(col = "dark grey", lty = "dashed"))
points.circular((kajuT2$net_angle_deg)*pi/180, pch = 16, cex = 2, start.sep = 0.15, zero = pi/2, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.4))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 16, axes = T, tcl.text = 0, units = "degrees", border = NA, zero = pi/2, tol = 0.08, control.circle=circle.control(col = "dark grey", lty = "dashed"))
points.circular((kajuT2$net_angle_deg)*pi/180, pch = 16, cex = 2, start.sep = 0.15, zero = pi/2, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.4))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 16, axes = T, tcl.text = 0, units = "degrees", border = NA, zero = pi/2, tol = 0.1, control.circle=circle.control(col = "dark grey", lty = "dashed"))
points.circular((kajuT2$net_angle_deg)*pi/180, pch = 16, cex = 2, start.sep = 0.15, zero = pi/2, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.4))
rose.diag(((kajuT2$net_angle_deg)*pi/180), cex = 1, bins = 16, axes = T, tcl.text = 0, units = "degrees", border = NA, zero = pi/2, tol = 0.12, control.circle=circle.control(col = "dark grey", lty = "dashed"))
points.circular((kajuT2$net_angle_deg)*pi/180, pch = 16, cex = 2, start.sep = 0.15, zero = pi/2, col = rgb(red = 0, green = 0, blue = 1, alpha = 0.4))
points.circular((kajuA1$net_angle_deg)*pi/180, pch = 16, cex = 2, start.sep = -0.15, zero = pi/2, col = rgb(red = 1, green = 0, blue = 0, alpha = 0.4))
kaju_data
install.packages("bpnreg")
library(bpnreg)
net_angle_fit <- bpnr(net_angle_deg ~ Region + (1|Animal), data = kaju_data, its = 10000, burn = 100, n.lag = 3, seed = 101)
view(kaju_data)
library(readxl)
kaju_data <- read_excel("C:/Downloads/Summer 2021 expt_withdrawal_latency.xlsx",
sheet = "Video analysis")
View(kaju_data)
net_angle_fit <- bpnr(net_angle_deg ~ Region + (1|Animal), data = kaju_data, its = 10000, burn = 100, n.lag = 3, seed = 101)
net_angle_fit <- bpnr(net_angle_deg ~ Region, data = kaju_data, its = 10000, burn = 100, n.lag = 3, seed = 101)
net_angle_fit <- bpnr(pred.I = net_angle_deg ~ Region, data = kaju_data, its = 10000, burn = 100, n.lag = 3, seed = 101)
net_angle_fit <- bpnr(pred.I = net_angle_deg ~ 1 + Region, data = kaju_data, its = 10000, burn = 100, n.lag = 3, seed = 101)
net_angle_fit <- bpnr(net_angle_deg ~ Region, data = kaju_data, its = 10000, burn = 100, n.lag = 3, seed = 101)
net_angle_fit <- bpnr(net_angle_deg ~ Region, data = kaju_data, its = 10000, burn = 100, seed = 101)
net_angle_fit <- bpnr(net_angle_deg ~ Region, data = kaju_data, its = 100)
typeof(kaju_data)
net_angle_fit <- bpnr(net_angle_deg ~ Region, data = as.data.frame(kaju_data), its = 10000, burn = 100, seed = 101)
df2 <- as.data.frame(kaju_data)
typeof(df2)
net_angle_fit <- bpnr(net_angle_deg*pi/180 ~ Region, data = kaju_data, its = 100)
net_angle_fit <- bpnr((net_angle_deg*pi/180) ~ Region, data = kaju_data, its = 100)
sum(is.na(kaju_data$net_angle_deg))
kaju_data$net_angle_deg*pi/180
net_angle_fit <- bpnr(kaju_data$net_angle_deg*pi/180 ~ kaju_data$Region, data = kaju_data, its = 100)
net_angle_fit <- bpnr(kaju_data$net_angle_deg*pi/180 ~ Region, data = kaju_data, its = 100)
net_angle_fit <- bpnr((kaju_data$net_angle_deg*pi/180) ~ Region, data = kaju_data, its = 100)
net_angle_fit <- bpnr(((kaju_data$net_angle_deg)*pi/180) ~ Region, data = kaju_data, its = 100)
library(readxl)
kaju_data <- read_excel("C:/Downloads/kaju_data.xlsx")
View(kaju_data)
net_angle_fit <- bpnr(net_angle_rad ~ Region, data = kaju_data, its = 100)
net_angle_fit <- bpnr(net_angle_rad ~ Region + (1|Animal), data = kaju_data, its = 100)
net_angle_fit <- bpnr(net_angle_rad ~ Region + 1|Animal, data = kaju_data, its = 100)
net_angle_fit <- bpnme(net_angle_rad ~ Region + (1|Animal), data = kaju_data, its = 100)
kaju_data$Animal <- as.factor(kaju_data$Animal)
net_angle_fit <- bpnme(net_angle_rad ~ Region + (1|Animal), data = kaju_data, its = 100)
library(readxl)
kaju_data <- read_excel("C:/Downloads/kaju_data.xlsx")
View(kaju_data)
net_angle_fit <- bpnme(net_angle_rad ~ Region + (1|Animal), data = kaju_data, its = 100)
summary(net_angle_fit)
library(car)
Anova(net_angle_fit)
net_angle_fit
kajuT2
library(circular)
watson.two.test(kajuA1$net_angle_deg(units = "degrees"), kajuT2$net_angle_deg(units = "degrees", alpha = 0.05))
watson.two.test(kajuA1$net_angle_deg(units = "degrees"), kajuT2$net_angle_deg(units = "degrees"), alpha = 0.05)
watson.two.test(kajuA1$net_angle_deg, kajuT2$net_angle_deg, alpha = 0.05)
watson.two.test(kajuA1$net_angle_deg*pi/180, kajuT2$net_angle_deg*pi/180, alpha = 0.05)
kajuA1 <- kaju_data[which(kaju_data$Region == "A1"),]
kajuT2 <- kaju_data[which(kaju_data$Region == "T2"),]
watson.two.test(kajuA1$net_angle_rad, kajuT2$net_angle_rad, alpha = 0.05)
watson.two.test(kajuA1$net_angle_rad, kajuT2$net_angle_rad, alpha = 0.1)
watson.two.test(kajuA1$net_angle_rad, kajuT2$net_angle_rad, alpha = 0)
rao.test(c(kajuA1$net_angle_rad, kajuT2$net_angle_rad))
rao.test(kajuA1$net_angle_rad, kajuT2$net_angle_rad)
summary(rao.test(kajuA1$net_angle_rad, kajuT2$net_angle_rad))
rao.test(kajuA1$net_angle_rad, kajuT2$net_angle_rad).polar
mean.circular(kajuA1)
mean.circular(kajuA1$net_angle_rad)
mean.circular(kajuT2$net_angle_rad)
wallraff.test(kajuT2$net_angle_rad)
wallraff.test.default(kajuT2$net_angle_rad)
summary.circular(kajuT2$net_angle_rad)
library(circular)
summary.circular(kajuT2$net_angle_rad)
var.circular(kajuT2$net_angle_rad)
var.circular(kajuA1$net_angle_rad)
install.packages("esquisse")
library(esquisse)
esquisser()
esquisser()
cor(df2$net_angle_deg, df2$Duration_ms, method = "pearson")
cor(df2$net_angle_deg, df2$Duration_ms, method = "spearman")
wd
wd()
getwd
setwd("C:\Users\mishra.266\Dropbox\SD_ST_AM\Dispersal\6 Before After (BA)\Files for final AmNat publication\Data files for Dryad")
library(readxl)
df <- read_excel("C:/Users/mishra.266/OneDrive - The Ohio State University/QTL - SC5314 x 529L/QTL analyses/5%peaks_x_to_-_analyses.xlsx")
View(df)
df(1)
df(,1)
df
df(1,1)
library(readxl)
df <- read_excel("C:/Users/mishra.266/OneDrive - The Ohio State University/QTL - SC5314 x 529L/QTL analyses/5%peaks_x_to_-_analyses.xlsx")
View(df)
df
df$`marker#...1`
source("~/.active-rstudio-document")
rv
df
source("~/.active-rstudio-document")
df
rv
source("~/.active-rstudio-document")
append(rv, fly)
source("~/.active-rstudio-document")
rv
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
rv
source("~/.active-rstudio-document")
rv
rv <- vector(mode = "list")
rv
rv <- append(rv, fly)
source("~/.active-rstudio-document")
r
rv
source("~/.active-rstudio-document")
rv <- append(rv, fly)
rv
rv[1]
df
rv[,1]
rv[[1]]
rv[[,1]]
rv[[1,]]
rv[[1],]
rv[,[1]]
rv
uniq_el
df[1] <- sample(0:99,1000,rep=TRUE)
df
df[1] <- sample(0:1,1000,rep=TRUE)
df
source("~/.active-rstudio-document")
df[1] <- sample(0:1,1000,rep=TRUE)
source("~/.active-rstudio-document")
rv
df
source("~/.active-rstudio-document")
df
uniq_el
rv
rv.T
T(rv)
source("~/.active-rstudio-document")
rv
rv[q]
rv[1]
rv[1,]
source("~/.active-rstudio-document")
rv
t(rv)
a <- t(rv)
View(a)
fly
source("~/.active-rstudio-document")
fly
rv
fly
source("~/.active-rstudio-document")
fly
source("~/.active-rstudio-document")
df
df[1]
uniq_el
source("~/.active-rstudio-document")
fly
source("~/.active-rstudio-document")
fly
source("~/.active-rstudio-document")
fly
uniq_el
i
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
i
subset(df, df[1]==0)
subset(df, df[1]==1)
df
subset(df, df[1]==1)
subset(df, df[,1]==1)
subset(df, df$X1==1)
length(df)
dim(df)
subset(df, df$X1==1)
subset(df, df$X1==as.integer(1))
subset(df, X1==as.integer(1))
subset(df, X1=="1")
df
subset(df, X1=="1")
subset(df, df[1]=="1")
subset(df[1], df[1]=="1")
subset(df, df[1]=="1")
subset(df, df[1]="1")
subset(df, df[1]==0)
subset(df, df[1]==1)
fly
source("~/.active-rstudio-document")
fly
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
rv
updateR()
library(installer)
install.packages("installr")
library(installer)
install.packages("Rtools")
install.packages("Rtools")
install.packages(c("MASS", "nlme"))
devtools::install_github('xavierdidelot/TransPhylo')
install.packages("devtools")
library(devtools)
devtools::install_github('xavierdidelot/TransPhylo')
library(TransPhylo)
devtools::install_github('xavierdidelot/TransPhylo')
library(Rtools)
devtools::install_github('xavierdidelot/TransPhylo')
library('TransPhylo')
set.seed(5)
neg=100/365
off.r=5
w.shape=10
w.scale=0.1
pi=0.25
simu <- simulateOutbreak(neg=neg,pi=pi,off.r=off.r,w.shape=w.shape,
w.scale=w.scale,dateStartOutbreak=2005,dateT=2008)
plot(simu)
library(ape)
phy<-read.tree(text='((4:1.257652937,(1:1.231048819,5:1.519248672):0.303038892):0.784065883,(3:1.643413444,(6:0.656820028,2:0.007344035611):0.7562780805):1.293120815);')
plot(phy)
axisPhylo(backward = F)
ptree<-ptreeFromPhylo(phy,dateLastSample=2007.964)
plot(ptree)
w.shape=10
w.scale=0.1
dateT=2008
library(TransPhylo)
library(ape)
library(ape)
library(TransPhylo)
getwd()
setwd("C:\Users\mishra.266\Documents\GitHub\beyond-phylogenies-team5\benchmark")
setwd("C:\\Users\\mishra.266\\Documents\\GitHub\\beyond-phylogenies-team5\\benchmark")
source("~/GitHub/beyond-phylogenies-team5/benchmark/outbreaker_to_clusters.R", echo=TRUE)
df_input
View(df_input)
library(car)
install.packages("car")
source("~/GitHub/beyond-phylogenies-team5/benchmark/pairs_to_clusters.R", echo=TRUE)
read.ftable("outbreaker2_demo_output.csv")
read.table("outbreaker2_demo_output.csv")
df_o <- read.table("outbreaker2_demo_output.csv")
View(df_o)
df_o <- read.table("outbreaker2_demo_output.csv", sep = ",", header = T)
View(df_o)
df_o <- read.table("outbreaker2_demo_output.csv", sep = "\t", header = T)
View(df_o)
df_o <- read.table("outbreaker2_demo_output.csv")
View(df_o)
View(df_o)
df <- df_o(cbind(df_o$fromT, df_o$toT, df_o$generations))
df <- df_o[cbind(df_o$fromT, df_o$toT, df_o$generations)]
df <- df_o[df_o$fromT, df_o$toT, df_o$generations]
df <- as.data.frame(df_o[cbind(df_o$fromT, df_o$toT, df_o$generations)])
View(df)
sub_df <- df_pairs[df_pairs$support => 0.8, ]
sub_df <- df_pairs[df_pairs$support >= 0.8, ]
sub_df <- df_o[df_o$support >= 0.8, ]
View(sub_df)
cols_to_subset <- c("fromT","toT","generations")
df2 <- df_o[,cols_to_subset]
View(df2)
cols_to_subset <- c("fromT","toT","generations")
outbreaker_to_clusters
outbreaker_to_clusters()
source("~/GitHub/beyond-phylogenies-team5/benchmark/outbreaker_to_clusters.R", echo=TRUE)
outbreaker_to_clusters()
outbreaker_to_clusters.R()
outbreaker_to_clusters()
source("~/GitHub/beyond-phylogenies-team5/benchmark/outbreaker_to_clusters.R", echo=TRUE)
View(df_o)
source("~/GitHub/beyond-phylogenies-team5/benchmark/outbreaker_to_clusters.R", echo=TRUE)
convert_outbreaker("outbreaker2_demo_output.csv",0.8)
source("~/GitHub/beyond-phylogenies-team5/benchmark/outbreaker_to_clusters.R", echo=TRUE)
convert_outbreaker("outbreaker2_demo_output.csv",0.8)
